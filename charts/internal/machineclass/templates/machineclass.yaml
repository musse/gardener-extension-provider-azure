{{- range $index, $machineClass := .Values.machineClasses }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $machineClass.name }}
  namespace: {{ $.Release.Namespace }}
{{- if $machineClass.labels }}
  labels:
{{ toYaml $machineClass.labels | indent 4 }}
{{- end }}
type: Opaque
data:
  userData: {{ $machineClass.secret.cloudConfig | b64enc }}
  azureClientId: {{ $machineClass.secret.clientID | b64enc }}
  azureClientSecret: {{ $machineClass.secret.clientSecret | b64enc }}
  azureSubscriptionId: {{ $machineClass.secret.subscriptionID | b64enc }}
  azureTenantId: {{ $machineClass.secret.tenantID | b64enc }}
---
apiVersion: machine.sapcloud.io/v1alpha1
kind: AzureMachineClass
metadata:
  name: {{ $machineClass.name }}
  namespace: {{ $.Release.Namespace }}
spec:
  location: {{ $machineClass.region }}
  properties:
    {{- if hasKey $machineClass "zone" }}
    zone: {{ $machineClass.zone }}
    {{- end }}
    {{- if hasKey $machineClass "availabilitySetID" }}
    availabilitySet:
      id: {{ $machineClass.availabilitySetID }}
    {{- end }}
    {{- if hasKey $machineClass "identityID" }}
    identityID: {{ $machineClass.identityID }}
    {{- end }}
    {{- if hasKey $machineClass.network "acceleratedNetworking" }}
    networkProfile:
      acceleratedNetworking: {{ $machineClass.network.acceleratedNetworking }}
    {{- end }}
    hardwareProfile:
      vmSize: {{ $machineClass.machineType }}
    osProfile:
      adminUsername: core
      linuxConfiguration:
        disablePasswordAuthentication: true
        ssh:
          publicKeys:
            path: /home/core/.ssh/authorized_keys
            keyData: {{ $machineClass.sshPublicKey }}
    storageProfile:
      imageReference:
{{- if $machineClass.image.id }}
        id: {{ $machineClass.image.id }}
{{- else }}
        urn: {{ $machineClass.image.urn }}
{{- end }}
      osDisk:
        caching: None
        diskSizeGB: {{ $machineClass.osDisk.size }}
        {{- if hasKey $machineClass.osDisk "type" }}
        managedDisk:
          storageAccountType: {{ $machineClass.osDisk.type }}
        {{- end }}
        createOption: FromImage
  resourceGroup: {{ $machineClass.resourceGroup }}
  secretRef:
    name: {{ $machineClass.name }}
    namespace: {{ $.Release.Namespace }}
  subnetInfo:
    vnetName: {{ $machineClass.network.vnet }}
    {{- if hasKey $machineClass.network "vnetResourceGroup" }}
    vnetResourceGroup: {{ $machineClass.network.vnetResourceGroup}}
    {{- end }}
    subnetName: {{ $machineClass.network.subnet }}
{{- if $machineClass.tags }}
  tags:
{{ toYaml $machineClass.tags | indent 4 }}
{{- end }}
{{- end }}
